# ================================================================
# JOB READY PLATFORM - NGINX CONFIGURATION
# Perfect for: Local testing, Docker deployment, Portfolio showcase
# Works with: localhost, Docker containers, free hosting platforms
# ================================================================

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=general_limit:10m rate=100r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Backend upstream with load balancing support
upstream backend {
    server backend:8080;
    keepalive 64;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# ================================================================
# MAIN SERVER - HTTP
# ================================================================
server {
    listen 80;
    server_name localhost;
    
    # Root directory
    root /usr/share/nginx/html;
    index index.html;
    
    # ============================================================
    # SECURITY HEADERS
    # ============================================================
    
    # Prevent clickjacking attacks
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # Prevent MIME type sniffing
    add_header X-Content-Type-Options "nosniff" always;
    
    # Enable XSS protection
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Referrer policy
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Permissions policy (restrict browser features)
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()" always;
    
    # Content Security Policy (allows CDNs for React, TailwindCSS, Firebase)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://unpkg.com https://cdn.tailwindcss.com https://cdn.jsdelivr.net https://cdnjs.cloudflare.com https://www.gstatic.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com data:; img-src 'self' data: https:; connect-src 'self' https://*.firebaseio.com https://firebasestorage.googleapis.com https://identitytoolkit.googleapis.com https://securetoken.googleapis.com wss://*.firebaseio.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

    # ============================================================
    # COMPRESSION (GZIP)
    # ============================================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/json 
        application/javascript 
        application/xml+rss 
        application/rss+xml 
        application/atom+xml
        font/truetype 
        font/opentype 
        application/vnd.ms-fontobject 
        image/svg+xml 
        application/x-font-ttf 
        application/x-web-app-manifest+json
        application/manifest+json
        application/x-font-woff
        application/font-woff
        application/font-woff2;

    # ============================================================
    # FRONTEND - Serve Static Files
    # ============================================================
    location / {
        try_files $uri $uri/ /index.html;
        expires 1h;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        
        # Prevent caching of index.html
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # ============================================================
    # API ENDPOINTS - With Rate Limiting and CORS
    # ============================================================
    location /api/ {
        # Apply rate limiting (60 requests per minute)
        limit_req zone=api_limit burst=20 nodelay;
        limit_req_status 429;
        limit_conn addr 10;
        
        # CORS headers - PERMISSIVE for development/portfolio
        # For production with domain, restrict origins
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
        add_header 'Access-Control-Max-Age' 1728000 always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        # Proxy to backend
        proxy_pass http://backend;
        proxy_http_version 1.1;
        
        # Proxy headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 90s;
        proxy_send_timeout 90s;
        proxy_read_timeout 90s;
        
        # Buffering
        proxy_buffering off;
        proxy_cache_bypass $http_upgrade;
        proxy_request_buffering off;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 = @backend_unavailable;
    }

    # ============================================================
    # AUTHENTICATION ENDPOINTS - Stricter Rate Limiting
    # ============================================================
    location ~ ^/api/(login|signup|auth|register) {
        # Stricter rate limiting for auth (10 requests per minute)
        limit_req zone=auth_limit burst=5 nodelay;
        limit_req_status 429;
        
        # CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ============================================================
    # HEALTH CHECK ENDPOINTS (No rate limiting)
    # ============================================================
    location /api/health {
        access_log off;
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
    }

    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # ============================================================
    # STATIC ASSETS - Aggressive Caching
    # ============================================================
    
    # Images - Cache for 1 year
    location ~* \.(jpg|jpeg|png|gif|ico|webp|avif|bmp|tiff)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
    }

    # CSS and JavaScript - Cache for 1 year
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Fonts - Cache for 1 year
    location ~* \.(svg|woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Allow cross-origin font loading
        add_header 'Access-Control-Allow-Origin' '*' always;
    }

    # Videos - Cache for 1 month
    location ~* \.(mp4|webm|ogg|avi|mov)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Other static files
    location ~* \.(pdf|doc|docx|zip|tar|gz)$ {
        expires 7d;
        add_header Cache-Control "public";
    }

    # Config.js - Shorter cache (1 hour)
    location = /config.js {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    # Manifest and service worker - No cache
    location ~* \.(manifest|webmanifest)$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # ============================================================
    # SECURITY - Deny Access to Sensitive Files
    # ============================================================
    
    # Hidden files and directories
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Sensitive file extensions
    location ~ /\.(htaccess|htpasswd|ini|log|sh|sql|conf|bak|backup|swp|env)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Prevent access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # ============================================================
    # ERROR HANDLING
    # ============================================================
    
    # Backend unavailable error page
    location @backend_unavailable {
        default_type application/json;
        return 503 '{"error": "Service temporarily unavailable", "message": "Backend service is down. Please try again later.", "status": 503, "timestamp": "$time_iso8601"}';
        add_header Content-Type application/json always;
        add_header Retry-After 30 always;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Rate limit error page
    error_page 429 = @rate_limit_error;
    location @rate_limit_error {
        default_type application/json;
        return 429 '{"error": "Rate limit exceeded", "message": "Too many requests. Please slow down.", "status": 429, "retry_after": 60}';
        add_header Content-Type application/json always;
        add_header Retry-After 60 always;
    }

    # ============================================================
    # LOGGING
    # ============================================================
    access_log /var/log/nginx/access.log combined buffer=32k flush=5s;
    error_log /var/log/nginx/error.log warn;
}

# ================================================================
# SERVER-WIDE SECURITY SETTINGS
# ================================================================

# Hide nginx version in error pages and headers
server_tokens off;

# Client body size limits
client_max_body_size 10M;
client_body_buffer_size 128k;

# Client header limits
client_header_buffer_size 1k;
large_client_header_buffers 4 8k;

# Timeouts
client_body_timeout 12;
client_header_timeout 12;
keepalive_timeout 15;
send_timeout 10;

# Prevent buffer overflow attacks
client_body_buffer_size 1K;
client_header_buffer_size 1k;

# Number of requests per connection
keepalive_requests 100;
